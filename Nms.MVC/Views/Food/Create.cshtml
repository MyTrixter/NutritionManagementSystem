@model Food

@{
    ViewData["Title"] = "Create Food";
}

<div class="container mt-4">
    <h1 class="text-center mb-4">@ViewData["Title"]</h1>

    <div class="card shadow-sm">
        <div class="card-body">
            <h4 class="card-title text-center">Add a New Food Item</h4>
            <hr />
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="form-group mb-3">
                    @Html.LabelFor(model => model.Name, new { @class = "form-label" })
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter food name" } })
                    <small class="text-danger">@Html.ValidationMessageFor(model => model.Name)</small>
                </div>

                <div class="form-group mb-3">
                    @Html.LabelFor(model => model.Calories, new { @class = "form-label" })
                    @Html.EditorFor(model => model.Calories, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter calorie value" } })
                    <small class="text-danger">@Html.ValidationMessageFor(model => model.Calories)</small>
                </div>

                <div class="form-group mb-3">
                    @Html.LabelFor(model => model.Protein, new { @class = "form-label" })
                    @Html.EditorFor(model => model.Protein, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter protein value" } })
                    <small class="text-danger">@Html.ValidationMessageFor(model => model.Protein)</small>
                </div>

                <div class="form-group mb-3">
                    @Html.LabelFor(model => model.Fats, new { @class = "form-label" })
                    @Html.EditorFor(model => model.Fats, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter fat value" } })
                    <small class="text-danger">@Html.ValidationMessageFor(model => model.Fats)</small>
                </div>

                <div class="form-group mb-3">
                    @Html.LabelFor(model => model.Carbohydrates, new { @class = "form-label" })
                    @Html.EditorFor(model => model.Carbohydrates, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter carbohydrate value" } })
                    <small class="text-danger">@Html.ValidationMessageFor(model => model.Carbohydrates)</small>
                </div>

                <div class="form-group mb-3">
                    @Html.LabelFor(model => model.Quantity, new { @class = "form-label" })
                    @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter quantity" } })
                    <small class="text-danger">@Html.ValidationMessageFor(model => model.Quantity)</small>
                </div>

                <div class="d-flex justify-content-between">
                    <button type="submit" class="btn btn-primary">Create</button>
                    <a href="@Url.Action("Main", "Food")" class="btn btn-secondary">Cancel</a>
                </div>
            }
        </div>
    </div>
</div>
